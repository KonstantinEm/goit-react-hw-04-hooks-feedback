{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","Styles","Statistics","good","neutral","bad","total","positivePercentage","status","items","positive","max","value","FeedbackOptions","onLeaveFeedback","feedbackBtn","type","name","onClick","Notification","message","App","useState","setGood","setNeutral","setBad","setTotal","setPositive","useEffect","toFixed","event","target","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,OAAS,2BAA2B,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,wBAAwB,MAAQ,0BAA0B,SAAW,+B,iBCAvMD,EAAOC,QAAU,CAAC,YAAc,uC,kBCAhCD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,qICiBbC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIC,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCuBQG,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,sBAAKP,UAAWC,IAAOO,OAAvB,UACE,oBAAGR,UAAWC,IAAOE,KAArB,mBAAkCA,KAClC,oBAAGH,UAAWC,IAAOG,QAArB,sBAAwCA,KACxC,oBAAGJ,UAAWC,IAAOI,IAArB,kBAAgCA,QAElC,oBAAGL,UAAWC,IAAOQ,MAArB,oBAAoCH,KACpC,oBAAGN,UAAWC,IAAOS,SAArB,gCACsBH,EADtB,IAEE,2BAAUI,IAAI,MAAMC,MAAOL,EAA3B,gCACsBA,EADtB,e,gBCwBOM,EAnCS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,qCACE,wBACEd,UAAWC,IAAOc,YAClBC,KAAK,SACLC,KAAK,OACLC,QAASJ,EAJX,kBAQA,wBACEd,UAAWC,IAAOc,YAClBC,KAAK,SACLC,KAAK,UACLC,QAASJ,EAJX,qBAQA,wBACEd,UAAWC,IAAOc,YAClBC,KAAK,SACLC,KAAK,MACLC,QAASJ,EAJX,qB,gBCTSK,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGpB,UAAWC,IAAOmB,QAArB,SAA+BA,OCDtB,SAASC,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBnB,EADqB,KACfoB,EADe,OAEED,mBAAS,GAFX,mBAErBlB,EAFqB,KAEZoB,EAFY,OAGNF,mBAAS,GAHH,mBAGrBjB,EAHqB,KAGhBoB,EAHgB,OAIFH,mBAAS,GAJP,mBAIrBhB,EAJqB,KAIdoB,EAJc,OAKIJ,mBAAS,IALb,mBAKrBZ,EALqB,KAKXiB,EALW,KAiC5B,OARAC,qBAAU,WACRF,EAASvB,EAAOC,EAAUC,KACzB,CAACF,EAAMC,EAASC,IAEnBuB,qBAAU,WACRD,EAAY,GAAD,QAAMxB,EAAOG,EAAS,KAAKuB,QAAQ,OAC7C,CAAC1B,EAAMG,IAGR,qCACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBgB,gBA7BH,SAACgB,GAGnB,OAFiBA,EAAMC,OAAfd,MAGN,IAAK,OACHM,GAAQ,SAACS,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHR,GAAW,SAACQ,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHP,GAAO,SAACO,GAAD,OAAeA,EAAY,WAqBzB,IAAV1B,EACC,cAAC,EAAD,CAAcc,QAAQ,sBAEtB,cAAC,EAAD,CAAStB,MAAM,aAAf,SACE,cAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBG,SChDhCuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACd,EAAD,MAEFe,SAASC,eAAe,W","file":"static/js/main.74ac5a36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Statistics_status__3IbHW\",\"good\":\"Statistics_good__2HX5O\",\"neutral\":\"Statistics_neutral__lvOBy\",\"bad\":\"Statistics_bad__3g1rH\",\"items\":\"Statistics_items__2OJiU\",\"positive\":\"Statistics_positive__MA4fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__3Qj3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1mlx-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3p0NM\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2 className={Styles.title}>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <div className={Styles.status}>\r\n        <p className={Styles.good}>Good: {good}</p>\r\n        <p className={Styles.neutral}>Neutral: {neutral}</p>\r\n        <p className={Styles.bad}>Bad: {bad}</p>\r\n      </div>\r\n      <p className={Styles.items}>Total: {total}</p>\r\n      <p className={Styles.positive}>\r\n        Positive feedback: {positivePercentage}%\r\n        <progress max=\"100\" value={positivePercentage}>\r\n          Positive feedback: {positivePercentage} %\r\n        </progress>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      <button\r\n        className={Styles.feedbackBtn}\r\n        type=\"button\"\r\n        name=\"good\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        className={Styles.feedbackBtn}\r\n        type=\"button\"\r\n        name=\"neutral\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        className={Styles.feedbackBtn}\r\n        type=\"button\"\r\n        name=\"bad\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p className={Styles.message}>{message}</p>\r\n    </>\r\n  );\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import { useEffect, useState } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positive, setPositive] = useState(\"\");\n\n  const handleClick = (event) => {\n    const { name } = event.target;\n\n    switch (name) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    setTotal(good + neutral + bad);\n  }, [good, neutral, bad]);\n\n  useEffect(() => {\n    setPositive(`${((good / total) * 100).toFixed(2)}`);\n  }, [good, total]);\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={handleClick} />\n      </Section>\n\n      {total === 0 ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positive}\n          />\n        </Section>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}